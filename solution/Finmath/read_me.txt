
This project implements a perticular case of Monte Carlo simulation of stock option prices.
The source code can be easily extended to the more generic use cases.
C++ standard libraries have been used only (no third-party libraries have been used).

finmath.cpp

	Initializes and starts Simulator instance

simulator.h / simulator.cpp

	Classes:

		Simulator - implements option price simulation
		Share - represents the stock share proce and behavioral parameters
		NormalDistribution - generates independent random sequences
		CorrelationGenerator - converts the sequences generated by the NormalDistribution instance to the correlated random sequences using Cholesky decomposition

matrix. / matrix.cpp

	Classes:

		Matrix - implements basic matrix oerations
		CorrelationMatrix - represents correlation coefficients
	
contract_calendar.h / contract_calendar.cpp

	Classes:

		ContractCalendar - represents contract dates and implements date iteration logic
		CalendarItemList - represents the iterable list of trading days
		CalendarItem - represents one trading day
		ContractMode - specifies what kind of date iteration logic the ContractCalendar should use (iterate over each calendar day, or skip weekends)
		DTUtils - implements date manupulation utility functions